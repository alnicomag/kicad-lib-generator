<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 11.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="11.0">
 <Targets>
  <Target Name="C:\Users\tatsuya\Documents\GitHub\kicad-lib-generator\KiLibTools\SchemaLibGenerator\bin\Debug\SchemaLibGenerator.exe">
   <Modules>
    <Module Name="schemalibgenerator.exe">
     <Namespaces>
      <Namespace Name="KiSchemaLib">
       <Types>
        <Type Name="KiSchemaLibFile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2013-04-17 18:22:21Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Dispose(bool) のオーバーライド可能な実装を 'KiSchemaLibFile' で指定するか、または型を sealed に設定します。Dispose(false) への呼び出しは、ネイティブ リソースのみをクリーンアップしなければなりません。Dispose(true) への呼び出しは、マネージおよびネイティブの両方のリソースをクリーンアップしなければなりません。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2013-04-17 18:22:21Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="c:\Users\tatsuya\Documents\GitHub\kicad-lib-generator\KiLibTools\SchemaLibGenerator" File="Class1.cs" Line="32">'KiSchemaLibFile.Dispose()' が Dispose(true) を呼び出してから、現在のオブジェクトのインスタンス (Visual Basic では 'this' または 'Me') で GC.SuppressFinalize を呼び出し、その後戻り値を返すように、'KiSchemaLibFile.Dispose()' を変更してください。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SchemaDrawArc" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2013-04-17 18:22:21Z" FixCategory="Breaking">
             <Issue Name="NoAllowedExceptions" Certainty="90" Level="Warning" Path="c:\Users\tatsuya\Documents\GitHub\kicad-lib-generator\KiLibTools\SchemaLibGenerator" File="Class1.cs" Line="397">'SchemaDrawArc.ToString()' は型 'NotImplementedException' の例外を生成します。この型のメソッドでは例外を発生させることはできません。この例外インスタンスが発生する可能性がある場合は、メソッドのロジックを変更して、例外が発生しないようにします。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SchemaDrawCircle" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2013-04-17 18:22:21Z" FixCategory="Breaking">
             <Issue Name="NoAllowedExceptions" Certainty="90" Level="Warning" Path="c:\Users\tatsuya\Documents\GitHub\kicad-lib-generator\KiLibTools\SchemaLibGenerator" File="Class1.cs" Line="419">'SchemaDrawCircle.ToString()' は型 'NotImplementedException' の例外を生成します。この型のメソッドでは例外を発生させることはできません。この例外インスタンスが発生する可能性がある場合は、メソッドのロジックを変更して、例外が発生しないようにします。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SchemaLibDrawPin" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2013-04-17 18:22:21Z" FixCategory="Breaking">
             <Issue Name="NoAllowedExceptions" Certainty="90" Level="Warning" Path="c:\Users\tatsuya\Documents\GitHub\kicad-lib-generator\KiLibTools\SchemaLibGenerator" File="Class1.cs" Line="511">'SchemaLibDrawPin.ToString()' は型 'NotImplementedException' の例外を生成します。この型のメソッドでは例外を発生させることはできません。この例外インスタンスが発生する可能性がある場合は、メソッドのロジックを変更して、例外が発生しないようにします。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SchemaLibDrawPolyline" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2013-04-17 18:22:21Z" FixCategory="Breaking">
             <Issue Name="NoAllowedExceptions" Certainty="90" Level="Warning" Path="c:\Users\tatsuya\Documents\GitHub\kicad-lib-generator\KiLibTools\SchemaLibGenerator" File="Class1.cs" Line="435">'SchemaLibDrawPolyline.ToString()' は型 'NotImplementedException' の例外を生成します。この型のメソッドでは例外を発生させることはできません。この例外インスタンスが発生する可能性がある場合は、メソッドのロジックを変更して、例外が発生しないようにします。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SchemaLibDrawText" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2013-04-17 18:22:21Z" FixCategory="Breaking">
             <Issue Name="NoAllowedExceptions" Certainty="90" Level="Warning" Path="c:\Users\tatsuya\Documents\GitHub\kicad-lib-generator\KiLibTools\SchemaLibGenerator" File="Class1.cs" Line="494">'SchemaLibDrawText.ToString()' は型 'NotImplementedException' の例外を生成します。この型のメソッドでは例外を発生させることはできません。この例外インスタンスが発生する可能性がある場合は、メソッドのロジックを変更して、例外が発生しないようにします。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SchemaLibGenerator">
       <Types>
        <Type Name="Program" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Main(System.String[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="オブジェクトを複数回破棄しない" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2013-04-17 18:22:21Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Users\tatsuya\Documents\GitHub\kicad-lib-generator\KiLibTools\SchemaLibGenerator" File="Program.cs" Line="79">オブジェクト 'stream' は、メソッド 'Program.Main(string[])' 内で 2 回以上破棄される可能性があります。System.ObjectDisposedException の生成を回避するには、オブジェクトに対して Dispose を 2 回以上呼び出さないようにしてください。: Lines: 79</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
   <Name>予期しない場所に例外を発生させません</Name>
   <Description>予期しない場所から例外を明示的に発生させないでください。Equals や GetHashCode などの一部のメソッドでは、ユーザーは例外の発生を予期していません。このため、これらのメソッドの呼び出しは一般に try catch ブロックでラップされません。</Description>
   <Resolution Name="NoAllowedExceptions">{0} は型 {1} の例外を生成します。この型のメソッドでは例外を発生させることはできません。この例外インスタンスが発生する可能性がある場合は、メソッドのロジックを変更して、例外が発生しないようにします。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386039(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>IDisposable を正しく実装します</Name>
   <Description>すべての IDisposable 型は、Dispose パターンを正しく実装しなければなりません。</Description>
   <Resolution Name="DisposeImplementation">{0} が Dispose(true) を呼び出してから、現在のオブジェクトのインスタンス (Visual Basic では 'this' または 'Me') で GC.SuppressFinalize を呼び出し、その後戻り値を返すように、{0} を変更してください。</Resolution>
   <Resolution Name="ProvideDisposeBool">Dispose(bool) のオーバーライド可能な実装を {0} で指定するか、または型を sealed に設定します。Dispose(false) への呼び出しは、ネイティブ リソースのみをクリーンアップしなければなりません。Dispose(true) への呼び出しは、マネージおよびネイティブの両方のリソースをクリーンアップしなければなりません。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="オブジェクトを複数回破棄しない" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>オブジェクトを複数回破棄しない</Name>
   <Description>正しく実装された Dispose メソッドは、例外がスローされることなく複数回呼び出すことが可能です。ただし、これは保証された動作ではないので、System.ObjectDisposedException の生成を回避するには、オブジェクトに対して Dispose を 2 回以上呼び出さないようにしてください。</Description>
   <Resolution Name="Default">オブジェクト {0} は、メソッド {1} 内で 2 回以上破棄される可能性があります。System.ObjectDisposedException の生成を回避するには、オブジェクトに対して Dispose を 2 回以上呼び出さないようにしてください。: Lines: 79</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">カテゴリ</String>
  <String Key="Certainty">確実性</String>
  <String Key="CollapseAll">すべて折りたたみ</String>
  <String Key="CheckId">ID の確認</String>
  <String Key="Error">エラー</String>
  <String Key="Errors">エラー</String>
  <String Key="ExpandAll">すべて展開</String>
  <String Key="Help">ヘルプ</String>
  <String Key="Line">行</String>
  <String Key="Messages">メッセージ</String>
  <String Key="LocationNotStoredInPdb">[場所は Pdb に格納されていません]</String>
  <String Key="Project">プロジェクト</String>
  <String Key="Resolution">解像度</String>
  <String Key="Rule">ルール</String>
  <String Key="RuleFile">規則ファイル</String>
  <String Key="RuleDescription">規則の説明</String>
  <String Key="Source">ソース</String>
  <String Key="Status">状態</String>
  <String Key="Target">ターゲット</String>
  <String Key="Warning">警告</String>
  <String Key="Warnings">警告</String>
  <String Key="ReportTitle">コード分析レポート</String>
 </Localized>
</FxCopReport>
